#include "script_component.hpp"
/*
 * Arguments:
 * 0: guard <OBJECT>
 * 1: vehicle <OBJECT>
 * 2: gate <OBJECT>
 *
 * Return Value:
 * None
 *
 * Example:
 * [this, "B_Story_SF_Captain_F", east] call grad_borderCrossing_fnc_addBorderCrossing;
 *
 * Public: No
 */
params ["_guard", "_vehicle", "_gate"];


private _movePosDoor = (getPos _vehicle) getPos [2.5, 270];

_guard doMove _movePosDoor;

[
   {
      diag_log format ["TESTTTTT %1", _this];
      diag_log format ["%1", (_this select 0)];
      (getPos (_this select 0) == _this select 1)
   },
   {
      /*
      _this params ["_guard", "", "_vehicle", "_gate"];

      private _checkPlayer = [];
      private _crew = [];
      {
         if (isPlayer _x) then {
            _crew pushBackUnique _x;
            _x setVariable ["GRAD_BorderCrossing_playerCheck", nil, true];
            //[{[] remoteExecCall ["grad_borderCrossing_fnc_handleDiaglog", _this, false];}, _x] call CBA_fnc_execNextFrame;
         };
      }forEach crew _vehicle;

      if (_crew isEqualTo []) then {
         //Handle AI

      }else{
         //Handle Player
         [
            {
               _this params ["", "", "", "_crew"];

               private _checkVar = 0;
               private _checkedPlayer = 0;
               {
                  if (isPlayer _x) then {
                     private _check = _x getVariable ["GRAD_BorderCrossing_playerCheck", nil];
                     _checkedPlayer = _checkedPlayer +1;
                     if (!(isNil (_check)) && _check) then {_checkVar = _checkVar +1;};
                  };
               }forEach _crew;
               if (_checkVar == _checkedPlayer) exitWith {false};
               true
            },
            {
               params ["_guard", "_vehicle", "_gate", "_crew"];

               private _check = true;
               {
                  _check = _x getVariable ["GRAD_BorderCrossing_playerCheck", nil];
                  if (isNil "_check") then {_check = true;};
                  if !(_check) exitWith {};

                  private _passPortData = [_x] call grad-passport_fnc_getPassportData;
                  _passPortData pushBackUnique (side _guard);
                  _passPortData call grad_borderCrossing_fnc_checkPassport;
               }forEach _crew;

               if (_check) then {
                  [] call grad_borderCrossing_fnc_openBarGate;
               };
            },
            [_guard, _vehicle, _gate, _crew],
            10
         ] call CBA_fnc_waitUntilAndExecute;
      };
      */
   },
   [_guard, _movePosDoor, _vehicle, _gate]
] call CBA_fnc_waitUntilAndExecute;
