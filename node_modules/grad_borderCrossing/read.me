Todo:
- Decision making
- Path walk
- Manage AI
  - Handle Drive Path
  (https://community.bistudio.com/wiki/BIS_fnc_UnitCapture)
  (https://community.bistudio.com/wiki/BIS_fnc_UnitPlay)
  or
  (https://community.bistudio.com/wiki/setDriveOnPath)
- Handle threats
- changing von switchMove to ace_common_fnc_doanimation

Anims:

Acts_listeningToRadio_in
Acts_listeningToRadio_loop
Acts_listeningToRadio_out
Acts_millerCamp_A
Acts_AidlPercMstpSloWWrflDnon_warmup_1_loop
Acts_AidlPercMstpSloWWrflDnon_warmup_2_loop
Acts_AidlPercMstpSloWWrflDnon_warmup_3_loop
Acts_AidlPercMstpSloWWrflDnon_warmup_4_loop
Acts_AidlPercMstpSloWWrflDnon_warmup_4_loop
Acts_AidlPercMstpSloWWrflDnon_warmup01
Acts_AidlPercMstpSloWWrflDnon_warmup02
Acts_AidlPercMstpSloWWrflDnon_warmup03
Acts_AidlPercMstpSloWWrflDnon_warmup04
Acts_AidlPercMstpSloWWrflDnon_warmup05
Acts_CivilHiding_1
Acts_CivilHiding_2
Acts_CivilIdle_1
Acts_CivilIdle_2
Acts_WalkingChecking
Acts_SignalToCheck
Acts_TerminalOpen
Acts_TreatingWounded_In
Acts_TreatingWounded_loop
Acts_TreatingWounded_Out
Acts_TreatingWounded01
Acts_TreatingWounded02
Acts_TreatingWounded03
Acts_TreatingWounded04
Acts_TreatingWounded05
Acts_TreatingWounded06
Acts_startPistol_loop
Acts_SittingWounded_loop
Acts_SittingWounded_out
Acts_SittingWounded_in
Acts_SittingWounded_breath
Acts_SittingJumpingSaluting_loop1
Acts_SittingJumpingSaluting_loop2
Acts_SittingJumpingSaluting_loop3
Acts_SittingJumpingSaluting_out
Acts_SittingJumpingSaluting_in
Acts_ShowingTheRightWay_in
Acts_ShowingTheRightWay_loop
Acts_ShowingTheRightWay_out
Acts_ShieldFromSun_in
Acts_ShieldFromSun_loop
Acts_ShieldFromSun_out
Acts_PercMstpSlowWrflDnon_handup1
Acts_PercMstpSlowWrflDnon_handup1b
Acts_PercMstpSlowWrflDnon_handup1c
Acts_PercMstpSlowWrflDnon_handup2
Acts_PercMstpSlowWrflDnon_handup2b
Acts_PercMstpSlowWrflDnon_handup2c
Acts_NavigatingChopper_In
Acts_NavigatingChopper_Loop
Acts_NavigatingChopper_Out
acts_millerChooper_in
acts_millerChopper_loop
acts_millerChopper_out
acts_miller_knockout
Acts_LyingWounded_loop
Acts_LyingWounded_loop1
Acts_LyingWounded_loop2
Acts_LyingWounded_loop3
Acts_listeningToRadio_In
Acts_listeningToRadio_Loop
Acts_listeningToRadio_Out
Acts_Kore_TalkingOverRadio_in
Acts_Kore_TalkingOverRadio_loop
Acts_Kore_TalkingOverRadio_out
Acts_Kore_PointingForward
Acts_Kore_IdleNoWeapon_in
Acts_Kore_IdleNoWeapon_loop
Acts_Kore_IdleNoWeapon_out
Acts_AidlPercMstpSloWWpstDnon_warmup_1_loop
Acts_AidlPercMstpSlowWrflDnon_pissing
Acts_AidlPercMstpSnonWnonDnon_warmup_8_loop
Acts_AidlPercMstpSnonWnonDnon_warmup_8_out
Acts_AidlPsitMstpSsurWnonDnon01
Acts_AidlPsitMstpSsurWnonDnon02
Acts_AidlPsitMstpSsurWnonDnon03
Acts_AidlPsitMstpSsurWnonDnon04
Acts_AidlPsitMstpSsurWnonDnon05
Acts_AidlPsitMstpSsurWnonDnon_loop
Acts_AidlPsitMstpSsurWnonDnon_out
Acts_carFixingWheel
Acts_CivilInjuredArms_1
Acts_CivilInjuredChest_1
Acts_CivilInjuredGeneral_1
Acts_CivilInjuredHead_1
Acts_CivilInjuredLegs_1
Acts_CivilListening_1
Acts_CivilListening_2
Acts_CivilShocked_1
Acts_CivilShocked_2
Acts_CivilTalking_1
Acts_CivilTalking_2
Acts_InjuredAngryRifle01
Acts_InjuredCoughRifle02
Acts_InjuredLookingRifle01
Acts_InjuredLookingRifle02
Acts_InjuredLookingRifle03
Acts_InjuredLookingRifle04
Acts_InjuredLookingRifle05
Acts_InjuredLyingRifle01
Acts_InjuredLyingRifle02
Acts_InjuredLyingRifle02_180
Acts_InjuredSpeakingRifle01

cts_AidlPercMstpSlowWrflDnon_pissing
Acts_AidlPercMstpSlowWrflDnon_warmup01-05
Acts_AidlPsitMstpSsurWnonDnon01 - 05 - _loop - _out
Acts_B_M03_briefing - 01 - 06
Acts_carFixingWheel
Acts_ComingInSpeakingWalkingOut_1 - 9

Acts_InjuredAngryRifle01
Acts_InjuredCoughRifle02
Acts_InjuredLookingRifle 01-05

Acts_listeningToRadio_In
Acts_listeningToRadio_Loop
Acts_listeningToRadio_Out

Acts_LyingWounded_loop - 1-3

Acts_PercMwlkSlowWrflDf

Acts_ShieldFromSun_in _loop _out

Acts_ShowingTheRightWay_in _loop _out

Acts_SittingWounded_loop _out _wave

Acts_StandingSpeakingUnarmed

Acts_TreatingWounded 01-06

Acts_WalkingChecking


Old Code
params ["_areaArray", "_guard", "_vehicle", "_gate"];

_guard playMoveNow "Acts_PercMstpSlowWrflDnon_handup2c";

_guard setVariable ["GRAD_BorderCrossing_guard_vehicle", _vehicle];
_guard setVariable ["GRAD_BorderCrossing_guard_gate", _gate];


_guard addEventHandler ["AnimDone", {
	params ["_unit", "_anim"];

	private _status = _unit getVariable ["GRAD_BorderCrossing_status", "unknown"];

	if (_status isEqualTo "combat") exitWith {

	};

	if (_status isEqualTo "denied") exitWith {
		switch (_anim) do {
			case "Acts_listeningToRadio_Loop": {
				_unit playmovenow "Acts_listeningToRadio_Out";
			};
			case "Acts_listeningToRadio_Out": {
				_unit playActionNow "ace_gestures_point";
			};
			default {
			};
		};
	};

	if (_status isEqualTo "accepted") exitWith {
		switch (_anim) do {
			case "Acts_listeningToRadio_Loop": {
				_unit playmovenow "Acts_listeningToRadio_Out";
			};
			case "Acts_ShowingTheRightWay_in" : {
				_unit playMoveNow "Acts_ShowingTheRightWay_loop";
			};
			case "Acts_ShowingTheRightWay_loop" : {
				_unit playMoveNow "Acts_ShowingTheRightWay_out";
			};
			default {
				_unit playMoveNow "Acts_ShowingTheRightWay_in";
			};
		};
		// AmovPercMstpSlowWrflDnon_gear
		// AmovPercMstpSlowWrflDnon_diary
	};

	if (_status isEqualTo "checking") exitWith {
		switch (_anim) do {
			case "Acts_listeningToRadio_In": {
				_unit playMoveNow "Acts_listeningToRadio_Loop";
			};
			case "Acts_listeningToRadio_Loop": {
				_unit playMoveNow "Acts_listeningToRadio_Loop";
			};
			default {
				_unit playMoveNow "Acts_listeningToRadio_In";
			};
		};
	};

	switch (_anim) do {
		case "Acts_PercMstpSlowWrflDnon_handup2c": {
			_unit playMoveNow "Acts_PercMstpSlowWrflDnon_handup2c";
		};


		case "Acts_listeningToRadio_In" : {
			_unit playMoveNow "Acts_listeningToRadio_Loop";
		};
		case "Acts_listeningToRadio_Loop" : {
			_unit playMoveNow "Acts_listeningToRadio_Out";
		};
		case "Acts_listeningToRadio_Out": {
			// return to default
		};


		case "Acts_JetsMarshallingSlow_in" : {
			_unit playMoveNow "Acts_JetsMarshallingSlow_Loop";
		};
		case "Acts_JetsMarshallingSlow_Loop" : {
			_unit playMoveNow "Acts_JetsMarshallingSlow_Out";
		};


		default { };
	};
}];



[{
	params ["_areaArray", "_guard", "_vehicle", "_gate"];
	count ([_vehicle] inAreaArray _areaArray) == 0
},
{
	params ["_areaArray", "_guard", "_vehicle", "_gate"];
	_guard removeAllEventHandlers "AnimDone";
	_guard playMoveNow "Acts_ShowingTheRightWay_out";
	_guard setVariable ["GRAD_BorderCrossing_guard_busy", false];
	_gate animate ["Door_1_rot", 0];
	_guard setRandomLip false;

}, [_areaArray, _guard, _vehicle, _gate]] call CBA_fnc_waitUntilAndExecute;
